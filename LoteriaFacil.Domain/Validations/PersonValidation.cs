using LoteriaFacil.Domain.Commands; using FluentValidation; using System; using System.Collections.Generic; using System.Text;  namespace LoteriaFacil.Domain.Validations {     public abstract class PersonValidation<T> : AbstractValidator<T> where T : PersonCommand     {          protected void ValidateName()         {             RuleFor(c => c.Name)                 .NotEmpty().WithMessage("Por favor, certifique-se que digitou o Nome!")                 .Length(3, 200).WithMessage("O Nome deve ter entre 3 e 200 caracteres.");         }          protected void ValidateRegisterDate()         {             RuleFor(c => c.DtRegister)                 .NotNull().WithMessage("Data de Registro não pode ser vazia!");         }          protected void ValidateEmail()         {             RuleFor(c => c.Email)                 .NotEmpty()                 .EmailAddress()                 .Length(3, 150).WithMessage("O E-mail deve ter entre 3 e 120 caracteres."); ;         }          protected void ValidateId()         {             RuleFor(c => c.Id)                 .NotEqual(Guid.Empty);         }          protected void ValidateActive()         {             RuleFor(c => c.Active)                 .NotNull().WithMessage("Data de Registro não pode ser nulo!"); ;         }      } } 